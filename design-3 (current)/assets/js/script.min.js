// Get elements from the DOM
const checkbox = document.getElementById("checkbox");
const s2_2 = document.getElementById("s2-2");
const linkedRoutes = document.querySelectorAll(".linked-route");
const expoUnits = document.querySelectorAll(".exp-unit");

// All Rights Reserved, Correct Year Specification
const smallFontElements = document.querySelectorAll(".smallfont");
const currentYearSpan = document.getElementById('currentYear');
const currentYear = new Date().getFullYear();
currentYearSpan.textContent = currentYear;

// Language Card
// const languageElement = document.getElementById("language_card");
// const darkModeSrc = "https://github-readme-stats.vercel.app/api/top-langs?username=arfazhxss&title_color=fff&bg_color=00000000&theme=algolia&layout=compact&show_icons=true&size_weight=0.5&count_weight=0.5&hide=html,shell,css,glsl,hlsl,cmake,shaderlab,makefile,batchfile,nasl,scss&exclude_repo=,vulkanapi-mactests,vulkanapi&langs_count=21&custom_title=Languages%20By%20Usage&hide_border=true";
// const lightModeSrc = "https://github-readme-stats.vercel.app/api/top-langs?username=arfazhxss&bg_color=00000000&title_color=000&text_color=000&layout=compact&show_icons=true&size_weight=0.5&count_weight=0.5&hide=html,shell,css,glsl,hlsl,cmake,shaderlab,makefile,batchfile,nasl,scss&exclude_repo=,vulkanapi-mactests,vulkanapi&langs_count=21&custom_title=Languages%20By%20Usage&hide_border=true";

// PopUpLinks
const popupLinks = document.getElementsByClassName("popupLink");
const popups = document.getElementsByClassName("popup");
const closeIcons = document.getElementsByClassName("close-icon");

// Function to set user's mode preference in local storage
const setModePreference = (mode) => {
    localStorage.setItem("modePreference", mode);
};

// Function to get user's mode preference from local storage
const getModePreference = () => {
    return localStorage.getItem("modePreference");
};

// Function to apply user's saved mode preference to the UI
const applyModePreference = () => {
    const savedMode = getModePreference();
    if (savedMode === "light") {
        applyLightMode();
    } else {
        applyDarkMode(); // Default: Dark mode as primary mode
    }
};

// Apply light mode styling
const applyLightMode = () => {
    checkbox.checked = true;
    s2_2.style.borderLeft = "1px solid #000";
    document.body.style.backgroundColor = "#fff";
    document.body.style.color = "#000";
    smallFontElements.forEach(element => {
        element.style.color = "rgb(0, 0, 0)";
    });
    changeFontColors("rgb(34,34,34)");
    addLinkedRouteListeners("rgb(34,34,34)");
    // toggleLanguageCard(lightModeSrc);
};

// Apply dark mode styling
const applyDarkMode = () => {
    checkbox.checked = false;
    s2_2.style.borderLeft = "1px solid #ffffff";
    document.body.style.backgroundColor = "#000";
    document.body.style.color = "#fff";
    smallFontElements.forEach(element => {
        element.style.color = "#fff";
    });
    changeFontColors("rgb(255,255,255)", "rgb(156,156,156)");
    addLinkedRouteListeners("#ffffff");
    // toggleLanguageCard(darkModeSrc);
};

// Function to toggle language theme
// const toggleLanguageCard = (NewModeSourceString) => {
//   languageElement.src = NewModeSourceString;
// };

// Function to change font colors
const changeFontColors = (primaryColor, secondaryColor = null) => {
    document.querySelectorAll(".whitefont, .greyfont, .whitefont-secondary").forEach(element => {
        element.style.color = primaryColor;
    });
    if (secondaryColor) {
        document.querySelectorAll(".greyfont").forEach(element => {
            element.style.color = secondaryColor;
        });
    }
};

// Function to add event listeners to linked routes
const addLinkedRouteListeners = (color) => {
    expoUnits.forEach(elementParent => {
        const linkedRoute = elementParent.querySelector(".linked-route");
        linkedRoute.style.color = color;

        elementParent.addEventListener("mouseover", () => {
            elementParent.style.cursor = "pointer";
            // linkedRoute.style.color = "#f1c40f";
        });
        elementParent.addEventListener("mouseout", () => {
            // linkedRoute.style.color = color;
        });
        elementParent.addEventListener("click", (event) => {
            event.preventDefault(); // Prevent the default link behavior
            const linkUrl = linkedRoute.getAttribute("href");
            if (linkUrl) {
                window.open(linkUrl, '_blank'); // Open link in new tab
            }
        });
    });
};


// Event listener for checkbox change (light/dark mode toggle)
// checkbox.addEventListener("change", () => {
//   if (checkbox.checked) {
//     applyLightMode();
//     setModePreference("light");
//   } else {
//     applyDarkMode();
//     setModePreference("dark");
//   }
// });

// Apply user's preferred mode on page load
// applyModePreference();

// function isAccessingSVGFileById() {
//   const svgElement = document.getElementById('arfazhxsse');

//   if (svgElement && svgElement.nodeName.toLowerCase() === 'svg') {
//     // An SVG element with the specified ID exists in the DOM
//     return true;
//   } else {
//     // Either the element with the specified ID doesn't exist or it's not an SVG
//     return false;
//   }
// }
// console.log(isAccessingSVGFileById());


// Navbar
window.addEventListener("scroll", function () {
    const scrollingDiv = document.querySelector(".navrow");
    const scrollPosition = window.scrollY;
    const imageElement = scrollingDiv.querySelector('#arfazhxsse');
    const iconElement = scrollingDiv.querySelector('.material-icons');

    // TEMPORARY; DARK MODE
    const startScroll = 0;
    const endScroll = 100;

    const progress = Math.min(1, (scrollPosition - startScroll) / (endScroll - startScroll));

    scrollingDiv.style.backgroundColor = `rgba(255, 255, 255, ${0.5 * progress})`;
    scrollingDiv.style.backdropFilter = `blur(${2 * progress}px)`;
    scrollingDiv.style.border = `${1 * progress}px solid rgb(235, 238, 241)`;
    imageElement.src = progress < 0.5 ? "assets/img/notBlurredImage.svg" : "assets/img/arfazhxsse.svg";
    iconElement.style.color = progress < 0.5 ? "#ffffff" : "#011E15";

    // // DARK MODE CHANGES
    // if ((getModePreference()==="dark")&&(scrollPosition === 0)) 
    // { scrollingDiv.style.background = "linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.0))"; } 
    // else if ((getModePreference() === "dark") && (scrollPosition !== 0)) 
    // { scrollingDiv.style.background = "linear-gradient(rgba(0, 0, 0, 0.87), rgba(0, 0, 0, 0.0))"; }

    // // LIGHT MODE CHANGES
    // else if ((getModePreference() === "light") && (scrollPosition === 0)) 
    // { scrollingDiv.style.background = "linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.0))"; }
    // else if ((getModePreference() === "light") && (scrollPosition >= 10)) 
    // { scrollingDiv.style.background = "linear-gradient(rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.0))"; }

});

// var menuToggle = document.querySelector('.menu-toggle');
// var sidebar = document.querySelector('#sidebar-wrapper');

// if (menuToggle) {
//   // Closes the sidebar menu
//   menuToggle.addEventListener('click', function (e) {
//     e.preventDefault();

//     sidebar.classList.toggle('active');
//     menuToggle.classList.toggle('active');

//     var icon = menuToggle.querySelector('.fa-bars, .fa-times');

//     if (icon) {
//       if (icon.classList.contains('fa-times')) {
//         icon.classList.remove('fa-times');
//         icon.classList.add('fa-bars');
//       } else if (icon.classList.contains('fa-bars')) {
//         icon.classList.remove('fa-bars');
//         icon.classList.add('fa-times');
//       }
//     }

//   });
// }

// var navbarCollapse = document.querySelector('.navbar-collapse');

// if (navbarCollapse) {
//   var navbarItems = navbarCollapse.querySelectorAll('a');

//   // Closes responsive menu when a scroll trigger link is clicked
//   for (var item of navbarItems) {
//     item.addEventListener('click', function (event) {
//       sidebar.classList.remove('active');
//       menuToggle.classList.remove('active');

//       var icon = menuToggle.querySelector('.fa-bars, .fa-times');

//       if (icon) {
//         if (icon.classList.contains('fa-times')) {
//           icon.classList.remove('fa-times');
//           icon.classList.add('fa-bars');
//         } else if (icon.classList.contains('fa-bars')) {
//           icon.classList.remove('fa-bars');
//           icon.classList.add('fa-times');
//         }
//       }
//     });
//   }
// }

function closeAllPopups() {
    for (let i = 0; i < popups.length; i++) {
        popups[i].style.display = "none";
        popups[i].classList.remove("active");
    }
}

for (let i = 0; i < popupLinks.length; i++) {
    popupLinks[i].addEventListener("click", () => {
        closeAllPopups();
        popups[i].style.display = "block";
        popups[i].classList.add("active");
    });
}

for (let i = 0; i < closeIcons.length; i++) {
    closeIcons[i].addEventListener("click", () => {
        popups[i].style.display = "none";
        popups[i].classList.remove("active");
    });
}
