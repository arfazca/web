const checkbox = document.getElementById("checkbox"),
    s2_2 = document.getElementById("s2-2"),
    linkedRoutes = document.querySelectorAll(".linked-route"),
    expoUnits = document.querySelectorAll(".exp-unit"),
    smallFontElements = document.querySelectorAll(".smallfont"),
    currentYearSpan = document.getElementById("currentYear"),
    currentYear = (new Date).getFullYear();
currentYearSpan.textContent = currentYear;
const languageElement = document.getElementById("language_card"),
    darkModeSrc = "https://github-readme-stats.vercel.app/api/top-langs?username=arfazhxss&bg_color=00000000&theme=algolia&layout=pie&show_icons=true&size_weight=0.5&count_weight=0.5&hide=html,shell,css,glsl&exclude_repo=csc111,js-base,vulkanapi-mactests,vulkanapi,portfolio-website&langs_count=7&custom_title=Frequently%20Used%20Languages&hide_border=true",
    lightModeSrc = "https://github-readme-stats.vercel.app/api/top-langs?username=arfazhxss&bg_color=eae3f5&theme=default&layout=pie&show_icons=true&size_weight=0.5&count_weight=0.5&hide=html,shell,css,glsl&exclude_repo=csc111,js-base,vulkanapi-mactests,vulkanapi,portfolio-website&langs_count=7&custom_title=Frequently%20Used%20Languages&hide_border=true",
    setModePreference = e => {
        localStorage.setItem("modePreference", e)
    },
    getModePreference = () => localStorage.getItem("modePreference"),
    applyModePreference = () => {
        "light" === getModePreference() ? applyLightMode() : applyDarkMode()
    },
    applyLightMode = () => {
        checkbox.checked = !0, s2_2.style.borderLeft = "1px solid #000", document.body.style.backgroundColor = "#fff", document.body.style.color = "#000", smallFontElements.forEach((e => {
            e.style.color = "rgb(0, 0, 0)"
        })), changeFontColors("rgb(34,34,34)"), addLinkedRouteListeners("rgb(34,34,34)"), toggleLanguageCard(lightModeSrc)
    },
    applyDarkMode = () => {
        checkbox.checked = !1, s2_2.style.borderLeft = "1px solid #ffffff", document.body.style.backgroundColor = "#000", document.body.style.color = "#fff", smallFontElements.forEach((e => {
            e.style.color = "#fff"
        })), changeFontColors("rgb(255,255,255)", "rgb(156,156,156)"), addLinkedRouteListeners("#ffffff"), toggleLanguageCard(darkModeSrc)
    },
    toggleLanguageCard = e => {
        languageElement.src = e
    },
    changeFontColors = (e, t = null) => {
        document.querySelectorAll(".whitefont, .greyfont, .whitefont-secondary").forEach((t => {
            t.style.color = e
        })), t && document.querySelectorAll(".greyfont").forEach((e => {
            e.style.color = t
        }))
    },
    addLinkedRouteListeners = e => {
        expoUnits.forEach((t => {
            const o = t.querySelector(".linked-route");
            o.style.color = e, t.addEventListener("mouseover", (() => {
                t.style.cursor = "pointer"
            })), t.addEventListener("mouseout", (() => { })), t.addEventListener("click", (e => {
                e.preventDefault();
                const t = o.getAttribute("href");
                t && window.open(t, "_blank")
            }))
        }))
    };
checkbox.addEventListener("change", (() => {
    checkbox.checked ? (applyLightMode(), setModePreference("light")) : (applyDarkMode(), setModePreference("dark"))
})), "light" === getModePreference() ? applyLightMode() : applyDarkMode(), window.addEventListener("scroll", (function () {
    const e = document.querySelector(".topmost"),
        t = window.scrollY;
    "dark" === getModePreference() && 0 === t ? e.style.background = "linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.0))" : "dark" === getModePreference() && 0 !== t ? e.style.background = "linear-gradient(rgba(0, 0, 0, 0.87), rgba(0, 0, 0, 0.0))" : "light" === getModePreference() && 0 === t ? e.style.background = "linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.0))" : "light" === getModePreference() && t >= 10 && (e.style.background = "linear-gradient(rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.0))")
}));